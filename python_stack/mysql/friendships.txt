write a SQL query that returns a list of users along with their friends' names.

SELECT  CONCAT_WS(' ', users.first_name, users.last_name) AS User, CONCAT_WS(' ', user2.first_name,user2.last_name) AS Friend FROM users 
LEFT JOIN friendships ON users.id = friendships.user_id
LEFT JOIN users as user2 ON user2.id = friendships.friend_id

Additional Exercises
Please also write the SQL queries needed to perform the following tasks:

1) Return all users who are friends with Kermit, make sure their names are displayed in the results.

SELECT  CONCAT_WS(' ', users.first_name, users.last_name) AS User, CONCAT_WS(' ', user2.first_name,user2.last_name) AS Friend FROM users 
LEFT JOIN friendships ON users.id = friendships.user_id
LEFT JOIN users as user2 ON user2.id = friendships.friend_id
WHERE user2.first_name = "Kermit";

2) Return the count of all friendships

select count(id) from friendships

3) Find out who has the most friends and return the count of their friends.
(NOTE: This query prints a count of all the users)

SELECT COUNT(users.id), users.first_Name, users.last_name FROM users
LEFT JOIN friendships ON users.id = friendships.user_id
LEFT JOIN users as user2 ON user2.id = friendships.friend_id
GROUP BY users.id


4) Create a new user and make them friends with Eli Byers, Kermit The Frog, and Marky Mark

/* Create new user */
INSERT INTO users (first_name, last_name, created_at) VALUES ("Keith", "Peterson", NOW());

/* Make new user friends with Eli, Kermit and Marky
/* Eli */
insert into friendships (user_id, friend_id, created_at) VALUES (7,2,NOW());

/* Kermit */
insert into friendships (user_id, friend_id, created_at) VALUES (7,4,NOW());

/* Marky */
insert into friendships (user_id, friend_id, created_at) VALUES (7,5,NOW());

5) Return the friends of Eli in alphabetical order

SELECT  CONCAT_WS(' ', users.first_name, users.last_name) AS User, CONCAT_WS(' ', user2.first_name,user2.last_name) AS Friend FROM users 
LEFT JOIN friendships ON users.id = friendships.user_id
LEFT JOIN users as user2 ON user2.id = friendships.friend_id
WHERE users.first_name = "Eli"
ORDER BY user2.first_name

6) Remove Marky Mark from Eliâ€™s friends.

DELETE FROM friendships WHERE user_id = 2 and friend_id = 5;

7) Return all friendships, displaying just the first and last name of both friends

SELECT  users.first_name, users.last_name, user2.first_name,user2.last_name FROM users 
LEFT JOIN friendships ON users.id = friendships.user_id
LEFT JOIN users as user2 ON user2.id = friendships.friend_id

